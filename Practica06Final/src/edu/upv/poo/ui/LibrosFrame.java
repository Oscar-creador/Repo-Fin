/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.upv.poo.ui;

import edu.upv.poo.App;
import edu.upv.poo.dataaccess.Editorial;
import edu.upv.poo.dataaccess.EditorialDbDao;
import edu.upv.poo.dataaccess.Libro;
import edu.upv.poo.dataaccess.LibroDbDao;
import edu.upv.poo.dataaccess.LibroInventario;
import edu.upv.poo.dataaccess.LibroInventarioDbDao;
import edu.upv.poo.dataaccess.TipoRecurso;
import edu.upv.poo.dataaccess.TipoRecursoDbDao;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class LibrosFrame extends javax.swing.JFrame {

    private Libro[] libros;

    /**
     * Creates new form LibrosFrame
     */
    public LibrosFrame() {
        initComponents();
        this.consultarLibros();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        btn_agregar = new javax.swing.JButton();
        btn_agregar1 = new javax.swing.JButton();
        btnBorrarLibro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbl.setBackground(new java.awt.Color(255, 255, 255));
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Tipo de recurso", "Edición", "Editorial", "Autores", "ISBN", "Activo"
            }
        ));
        tbl.setColumnSelectionAllowed(true);
        tbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbl.setFocusable(false);
        tbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbl.getTableHeader().setReorderingAllowed(false);
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);
        tbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btn_agregar.setBackground(new java.awt.Color(25, 118, 210));
        btn_agregar.setForeground(new java.awt.Color(255, 255, 255));
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_agregar1.setBackground(new java.awt.Color(25, 118, 210));
        btn_agregar1.setForeground(new java.awt.Color(255, 255, 255));
        btn_agregar1.setText("Agregar en inventario");
        btn_agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar1ActionPerformed(evt);
            }
        });

        btnBorrarLibro.setBackground(new java.awt.Color(25, 118, 210));
        btnBorrarLibro.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrarLibro.setText("Borrar libro");
        btnBorrarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarLibroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_agregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBorrarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_agregar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBorrarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
        LibrosAgregarFrame form = new LibrosAgregarFrame(null);
        form.setLibroGuardadoListener(this::libroGuardado);
        form.setVisible(true);
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        int index = tbl.getSelectedRow();
        if(evt.getClickCount()==2){
            LibrosAgregarFrame form = new LibrosAgregarFrame(libros[index]);
            form.setLibroGuardadoListener(this::libroGuardado);
            form.setVisible(true);
        }
    }//GEN-LAST:event_tblMouseClicked

    private void btn_agregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar1ActionPerformed
        // TODO add your handling code here:
        if(tbl.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "Seleccione un campo ","Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try(Connection connection = App.getConnection()){
            LibroInventario l = new LibroInventario();
            LibroInventarioDbDao lidbdao = App.getLibrosInventarioDao(connection);
            l.setLibroId(libros[tbl.getSelectedRowCount()-1].getId());
            l.setEstado("activo");
            l.setDisponible(true);
            lidbdao.insert(l);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al obtener los datos: " + ex.getMessage(),"Error!", JOptionPane.ERROR_MESSAGE);
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error al obtener los datos: " + ex.getMessage(),"Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_agregar1ActionPerformed

    private void btnBorrarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarLibroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBorrarLibroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarLibro;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_agregar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
    
    private void consultarLibros() {
        libros = null;
        try (Connection connection = App.getConnection()) {
            LibroDbDao librosDbDao = App.getLibrosDao(connection);
            libros = librosDbDao.getAll();
            cargarTblEditoriales();
        } 
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error al obtener los datos: " + ex.getMessage(),"Error!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void libroGuardado(String accion, Libro libroGuardado) {
        consultarLibros();
    }
    
    private void cargarTblEditoriales() throws Exception {
        DefaultTableModel tblModel = (
                DefaultTableModel)tbl.getModel();
        while (tblModel.getRowCount() != 0) tblModel.removeRow(0);
        if (libros == null) return;
        for (int i = 0; i < libros.length; i++) {
            tblModel.insertRow(i, toRow(libros[i]));
        }
        
    }

    private Object[] toRow(Libro i) throws Exception {
        TipoRecurso tr = new TipoRecurso();
        Editorial e = new Editorial();
        try(Connection connection = App.getConnection()){
            TipoRecursoDbDao trdbdao = new TipoRecursoDbDao(connection);
            EditorialDbDao edbdao = new EditorialDbDao(connection);
            tr = trdbdao.getById(i.getTipoRecursoId());
            e = edbdao.getById(i.getEditorialId());
        }
        return new Object[] {
            i.getTitulo(), tr, i.getEdicion(),e,i.getAutores(),i.getIsbn(),i.isActivo()
        };
    }
}
